return {
  "folke/which-key.nvim",
  event = "VeryLazy",
  opts = {
    plugins = { spelling = true },
    spec = {
      {
        mode = { "n", "v" },
        { "<leader><leader>", group = "misc" },
        { "<leader><tab>", group = "tabs" },
        { "<leader>b", group = "buffer" },
        { "<leader>c", group = "code" },
        { "<leader>d", group = "DAP" },
        { "<leader>f", group = "file/find" },
        { "<leader>g", group = "Git" },
        { "<leader>gh", group = "Github" },
        { "<leader>ghc", group = "Commits" },
        { "<leader>ghcc", "<cmd>GHCloseCommit<cr>", desc = "Close" },
        { "<leader>ghce", "<cmd>GHExpandCommit<cr>", desc = "Expand" },
        { "<leader>ghco", "<cmd>GHOpenToCommit<cr>", desc = "Open To" },
        { "<leader>ghcp", "<cmd>GHPopOutCommit<cr>", desc = "Pop Out" },
        { "<leader>ghcz", "<cmd>GHCollapseCommit<cr>", desc = "Collapse" },
        { "<leader>ghi", group = "Issues" },
        { "<leader>ghip", "<cmd>GHPreviewIssue<cr>", desc = "Preview" },
        { "<leader>ghl", group = "Litee" },
        { "<leader>ghlt", "<cmd>LTPanel<cr>", desc = "Toggle Panel" },
        { "<leader>ghp", group = "Pull Request" },
        { "<leader>ghpc", "<cmd>GHClosePR<cr>", desc = "Close" },
        { "<leader>ghpd", "<cmd>GHPRDetails<cr>", desc = "Details" },
        { "<leader>ghpe", "<cmd>GHExpandPR<cr>", desc = "Expand" },
        { "<leader>ghpo", "<cmd>GHOpenPR<cr>", desc = "Open" },
        { "<leader>ghpp", "<cmd>GHPopOutPR<cr>", desc = "PopOut" },
        { "<leader>ghpr", "<cmd>GHRefreshPR<cr>", desc = "Refresh" },
        { "<leader>ghpt", "<cmd>GHOpenToPR<cr>", desc = "Open To" },
        { "<leader>ghpz", "<cmd>GHCollapsePR<cr>", desc = "Collapse" },
        { "<leader>ghr", group = "Review" },
        { "<leader>ghrb", "<cmd>GHStartReview<cr>", desc = "Begin" },
        { "<leader>ghrc", "<cmd>GHCloseReview<cr>", desc = "Close" },
        { "<leader>ghrd", "<cmd>GHDeleteReview<cr>", desc = "Delete" },
        { "<leader>ghre", "<cmd>GHExpandReview<cr>", desc = "Expand" },
        { "<leader>ghrs", "<cmd>GHSubmitReview<cr>", desc = "Submit" },
        { "<leader>ghrz", "<cmd>GHCollapseReview<cr>", desc = "Collapse" },
        { "<leader>ght", group = "Threads" },
        { "<leader>ghtc", "<cmd>GHCreateThread<cr>", desc = "Create" },
        { "<leader>ghtn", "<cmd>GHNextThread<cr>", desc = "Next" },
        { "<leader>ghtt", "<cmd>GHToggleThread<cr>", desc = "Toggle" },
        { "<leader>h", group = "harpoon" },
        { "<leader>j", group = "jupyter" },
        { "<leader>l", group = "LSP" },
        { "<leader>la", group = "LSP Actions" },
        { "<leader>lc", group = "LSP Codelens" },
        { "<leader>ll", group = "LSP LogFuncs" },
        { "<leader>llo", group = "LSP LogFuncs" },
        { "<leader>m", group = "macro" },
        { "<leader>p", group = "plugins" },
        { "<leader>pc", group = "choco" },
        { "<leader>pcu", group = "choco upgrade" },
        { "<leader>q", group = "quit/session" },
        { "<leader>s", group = "search" },
        { "<leader>sn", group = "noice" },
        { "<leader>sq", group = "Dbee" },
        { "<leader>t", group = "term/testing" },
        { "<leader>u", group = "ui" },
        { "<leader>w", "<Cmd>w<CR>", desc = "Save Buffer" },
        { "<leader>x", group = "diagnostics/quickfix" },
        { "[", group = "prev" },
        { "]", group = "next" },
        { "g", group = "goto" },
        { "gs", group = "surround" },
        { "z", group = "fold" },
      },
    },
  },
  -- config = function(_, opts)
  --   local wk = require("which-key")
  --   wk.setup(opts)
  --   local keymaps = {
  --     mode = { "n", "v" },
  --     ["g"] = { name = "+goto" },
  --     ["gs"] = { name = "+surround" },
  --     ["z"] = { name = "+fold" },
  --     ["]"] = { name = "+next" },
  --     ["["] = { name = "+prev" },
  --     -- ["<leader>gh"] = { name = "+hunks" },
  --     ["<leader>g"] = { name = "+Git" },
  --     ["<leader>gh"] = { name = "+Github" },
  --     ["<leader>ghc"] = { name = "+Commits" },
  --     ["<leader>ghcc"] = { "<cmd>GHCloseCommit<cr>", "Close" },
  --     ["<leader>ghce"] = { "<cmd>GHExpandCommit<cr>", "Expand" },
  --     ["<leader>ghco"] = { "<cmd>GHOpenToCommit<cr>", "Open To" },
  --     ["<leader>ghcp"] = { "<cmd>GHPopOutCommit<cr>", "Pop Out" },
  --     ["<leader>ghcz"] = { "<cmd>GHCollapseCommit<cr>", "Collapse" },
  --     ["<leader>ghi"] = { name = "+Issues" },
  --     ["<leader>ghip"] = { "<cmd>GHPreviewIssue<cr>", "Preview" },
  --     ["<leader>ghl"] = { name = "+Litee" },
  --     ["<leader>ghlt"] = { "<cmd>LTPanel<cr>", "Toggle Panel" },
  --     ["<leader>ghr"] = { name = "+Review" },
  --     ["<leader>ghrb"] = { "<cmd>GHStartReview<cr>", "Begin" },
  --     ["<leader>ghrc"] = { "<cmd>GHCloseReview<cr>", "Close" },
  --     ["<leader>ghrd"] = { "<cmd>GHDeleteReview<cr>", "Delete" },
  --     ["<leader>ghre"] = { "<cmd>GHExpandReview<cr>", "Expand" },
  --     ["<leader>ghrs"] = { "<cmd>GHSubmitReview<cr>", "Submit" },
  --     ["<leader>ghrz"] = { "<cmd>GHCollapseReview<cr>", "Collapse" },
  --     ["<leader>ghp"] = { name = "+Pull Request" },
  --     ["<leader>ghpc"] = { "<cmd>GHClosePR<cr>", "Close" },
  --     ["<leader>ghpd"] = { "<cmd>GHPRDetails<cr>", "Details" },
  --     ["<leader>ghpe"] = { "<cmd>GHExpandPR<cr>", "Expand" },
  --     ["<leader>ghpo"] = { "<cmd>GHOpenPR<cr>", "Open" },
  --     ["<leader>ghpp"] = { "<cmd>GHPopOutPR<cr>", "PopOut" },
  --     ["<leader>ghpr"] = { "<cmd>GHRefreshPR<cr>", "Refresh" },
  --     ["<leader>ghpt"] = { "<cmd>GHOpenToPR<cr>", "Open To" },
  --     ["<leader>ghpz"] = { "<cmd>GHCollapsePR<cr>", "Collapse" },
  --     ["<leader>ght"] = { name = "+Threads" },
  --     ["<leader>ghtc"] = { "<cmd>GHCreateThread<cr>", "Create" },
  --     ["<leader>ghtn"] = { "<cmd>GHNextThread<cr>", "Next" },
  --     ["<leader>ghtt"] = { "<cmd>GHToggleThread<cr>", "Toggle" },
  --     ["<leader><tab>"] = { name = "+tabs" },
  --     ["<leader><leader>"] = { name = "+misc" },
  --     ["<leader>b"] = { name = "+buffer" },
  --     ["<leader>c"] = { name = "+code" },
  --     ["<leader>d"] = { name = "+DAP" },
  --     ["<leader>f"] = { name = "+file/find" },
  --     ["<leader>h"] = { name = "+harpoon" },
  --     ["<leader>j"] = { name = "+jupyter" },
  --     ["<leader>q"] = { name = "+quit/session" },
  --     ["<leader>l"] = { name = "+LSP" },
  --     ["<leader>la"] = { name = "+LSP Actions" },
  --     ["<leader>lc"] = { name = "+LSP Codelens" },
  --     ["<leader>ll"] = { name = "+LSP LogFuncs" },
  --     ["<leader>llo"] = { name = "+LSP LogFuncs" },
  --     ["<leader>m"] = { name = "+macro" },
  --     ["<leader>p"] = { name = "+plugins" },
  --     ["<leader>pc"] = { name = "+choco" },
  --     ["<leader>pcu"] = { name = "+choco upgrade" },
  --     ["<leader>s"] = { name = "+search" },
  --     ["<leader>sq"] = { name = "+Dbee" },
  --     ["<leader>t"] = { name = "+term/testing" },
  --     ["<leader>u"] = { name = "+ui" },
  --     ["<leader>w"] = { "<Cmd>w<CR>", "Save Buffer" },
  --     ["<leader>x"] = { name = "+diagnostics/quickfix" },
  --   }
  --
  --   -- if require("lazy.Util").has("noice.nvim") then
  --   keymaps["<leader>sn"] = { name = "+noice" }
  --   -- end
  --   --
  --   wk.register(keymaps)
  -- end,
}
